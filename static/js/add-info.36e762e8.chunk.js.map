{"version":3,"sources":["components/AddInfo/AddInfo.module.css","components/AddInfo/AddInfo.js"],"names":["module","exports","Cast","lazy","Reviews","AddInfo","id","reviews","cast","state","useLocation","additionalClass","s","AddInfo__links","to","className","AddInfo__item","replace","from","fallback","path","element","castArray","additional","reviewsArray"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,cAAgB,iC,gCCDnF,gHAWMC,EAAOC,gBAAK,kBAChB,gCAEIC,EAAUD,gBAAK,kBACnB,gCAGa,SAASE,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACrCC,EAAUC,cAAVD,MAER,OACE,mCACE,eAAC,IAAD,CAAWE,gBAAiBC,IAAEC,eAA9B,UACE,cAAC,IAAD,CACEC,GAAE,OACFC,UAAWH,IAAEI,cACbC,SAAO,EACPR,MAAO,CAAES,KAAMT,GAJjB,kBAQA,cAAC,IAAD,CACEK,GAAE,UACFC,UAAWH,IAAEI,cACbC,SAAO,EACPR,MAAO,CAAES,KAAMT,GAJjB,qBAQA,cAAC,WAAD,CAAUU,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAI,OACJC,QAAS,cAACnB,EAAD,CAAMI,GAAIA,EAAIgB,UAAWd,EAAMe,YAAU,MAEpD,cAAC,IAAD,CACEH,KAAI,UACJC,QAAS,cAACjB,EAAD,CAASE,GAAIA,EAAIkB,aAAcjB","file":"static/js/add-info.36e762e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddInfo__links\":\"AddInfo_AddInfo__links__1FSZy\",\"AddInfo__item\":\"AddInfo_AddInfo__item__2042J\"};","import { Suspense, lazy } from 'react';\nimport { Route, Routes, useLocation } from 'react-router';\nimport { NavLink } from 'react-router-dom';\n\nimport Container from 'components/Container/Container';\nimport Loading from 'components/Loader/Loader';\n\nimport s from 'components/AddInfo/AddInfo.module.css';\n\nimport PropTypes from 'prop-types';\n\nconst Cast = lazy(() =>\n  import('components/Cast/Cast' /* webpackChunkName: \"cast\" */),\n);\nconst Reviews = lazy(() =>\n  import('components/Reviews/Reviews' /* webpackChunkName: \"reviews\" */),\n);\n\nexport default function AddInfo({ id, reviews, cast }) {\n  const { state } = useLocation();\n\n  return (\n    <>\n      <Container additionalClass={s.AddInfo__links}>\n        <NavLink\n          to={`cast`}\n          className={s.AddInfo__item}\n          replace\n          state={{ from: state }}\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          to={`reviews`}\n          className={s.AddInfo__item}\n          replace\n          state={{ from: state }}\n        >\n          Reviews\n        </NavLink>\n        <Suspense fallback={<Loading />}>\n          <Routes>\n            <Route\n              path={`cast`}\n              element={<Cast id={id} castArray={cast} additional />}\n            />\n            <Route\n              path={`reviews`}\n              element={<Reviews id={id} reviewsArray={reviews} />}\n            />\n          </Routes>\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n\nAddInfo.propTypes = {\n  id: PropTypes.string,\n  reviews: PropTypes.array,\n  cast: PropTypes.array,\n};\n"],"sourceRoot":""}