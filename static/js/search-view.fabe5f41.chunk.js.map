{"version":3,"sources":["components/Container/Container.js","services/api.js","components/List/List.js","components/Container/Container.module.css","components/List/List.module.css","components/Button/Button.js","views/MovieSearchView.module.css","components/Searchbar/Searchbar.js","views/MovieSearchView.js"],"names":["Container","children","className","s","API_KEY","BASE","List","heading","module","exports","Button","type","text","onClick","Searchbar","onSubmit","useState","query","setQuery","e","preventDefault","trim","toast","error","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","htmlFor","name","value","onChange","currentTarget","toLowerCase","id","MovieSearchView","foundMovies","setFoundMovies","setError","total","setTotal","pageNumber","setPageNumber","loading","setLoading","useEffect","axios","get","then","response","array","data","results","total_results","prevList","catch","message","finally","window","localStorage","setItem","JSON","stringify","length","map","title","poster_path","release_date","overview","Search__item","alt","src","Search__image","Search__description","to","Search__title","Date","toDateString","Search__overview","prevPage"],"mappings":"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","file":"static/js/search-view.fabe5f41.chunk.js","sourcesContent":["import s from 'components/Container/Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.Container}>{children}</div>;\n}\n","export const API_KEY = '6fc149a4cf08bb260c2094f65b6f8095';\nexport const BASE = 'https://api.themoviedb.org/3';\n\nexport async function fetchMovies(value, page) {\n  return await fetch(`${BASE}/search/movie?api_key=${API_KEY}&query=${value}`)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .then(data => data);\n}\n","import s from 'components/List/List.module.css';\n\nexport default function List({ children, heading }) {\n  return (\n    <>\n      <h2>{heading}</h2>\n      <ul className={s.List}>{children}</ul>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__RbBaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__21E3Q\"};","import s from 'components/Button/Button.module.css';\n\nexport default function Button({ type, text, onClick }) {\n  return (\n    <button className={s.Button} type={type} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search__item\":\"MovieSearchView_Search__item__2Xqa- HomeView_Home__item__263oX\",\"Search__image\":\"MovieSearchView_Search__image__1ZPU6 HomeView_Home__image__skJiW\",\"Search__description\":\"MovieSearchView_Search__description__2c_VD HomeView_Home__description__3r3-y\",\"Search__title\":\"MovieSearchView_Search__title__tJiAO HomeView_Home__title__1iBkE\",\"Search__overview\":\"MovieSearchView_Search__overview__1uJpn HomeView_Home__overview__1-KNm\"};","import Button from 'components/Button/Button';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Please type the query', {\n        position: 'top-right',\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const handleQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"inputSearch\"></label>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={handleQueryChange}\n          id=\"inputSearch\"\n        />\n        <Button text=\"Search\" type=\"submit\" />\n      </form>\n    </>\n  );\n}\n","// searchbar\n// button\n\nimport axios from 'axios';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport List from 'components/List/List';\nimport Loading from 'components/Loader/Loader';\nimport Button from 'components/Button/Button';\nimport Container from 'components/Container/Container';\nimport { API_KEY, BASE } from 'services/api';\nimport s from 'views/MovieSearchView.module.css';\n\nexport default function MovieSearchView() {\n  const [query, setQuery] = useState('');\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    setLoading(true);\n\n    setQuery(query);\n    axios\n      .get(\n        `${BASE}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${pageNumber}&include_adult=false`,\n      )\n      .then(response => {\n        const array = response.data.results;\n        const total = response.data.total_results;\n        setFoundMovies(prevList => [...prevList, ...array]);\n        setTotal(total);\n        // console.log(response);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => setLoading(false));\n    // console.log(foundMovies);\n  }, [query, pageNumber]);\n\n  useEffect(() => {\n    window.localStorage.setItem('found', JSON.stringify(foundMovies));\n  }, [foundMovies]);\n\n  const onQueryChange = query => {\n    setQuery(query);\n    setPageNumber(1);\n    setFoundMovies([]);\n    setError(null);\n  };\n\n  const loadMore = () => {\n    setPageNumber(prevPage => prevPage + 1);\n  };\n  return (\n    <Container>\n      <Searchbar onSubmit={onQueryChange} />\n      {loading && <Loading />}\n\n      {foundMovies.length > 0 && (\n        <>\n          <h2>Results</h2>\n          <List>\n            {foundMovies.map(\n              ({ title, id, poster_path, release_date, overview }) => (\n                <li key={id} className={s.Search__item}>\n                  <img\n                    alt={title}\n                    src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                    className={s.Search__image}\n                  />\n                  <div className={s.Search__description}>\n                    <Link to={`/movies/${id}`} className={s.Search__title}>\n                      <h2>{title}</h2>\n                    </Link>\n                    <p> {new Date(release_date).toDateString()}</p>\n                    <p className={s.Search__overview}>{overview}</p>\n                  </div>\n                </li>\n              ),\n            )}\n          </List>\n        </>\n      )}\n      {total > 20 && <Button text=\"Load More\" onClick={loadMore} />}\n      {foundMovies.length === 0 && query && (\n        <div>Nothing was found on {query}</div>\n      )}\n    </Container>\n  );\n}\n"],"sourceRoot":""}